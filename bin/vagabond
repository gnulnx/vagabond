#!/usr/bin/env python
import os
import sys
import argparse
import errno
import logging

"""
    This is the vagabond command line utility
"""
TEST=False

def getArgs():
    parser = argparse.ArgumentParser(description="Build and Manage a VirtualBox machine using python")
    parser.add_argument('--color', action='store', choices=['on', 'off'], help="Color output on/off.  Default is on")

    subparser = parser.add_subparsers(help="Sub processor help", dest="subparser_name")

    # Need to implement these
    init_parser = subparser.add_parser('init', help="Start a Vagabond Project")
    init_parser.add_argument('project-name', help="The location of the project")
    init_parser.add_argument('-b', '--box', action="store", default="hashicopy/precise64", help="Name of the box to use for the project") 
    init_parser.add_argument('-i', '--iso', action="store", help="Name of an iso image to use")
    init_parser.add_argument('-f', '--force', action="store_true", help="Overwrite existing Vagabond.py file")

    destroy_parser = subparser.add_parser('destroy', help="Destroy the virtual machine")

    halt_parser = subparser.add_parser('halt', help="Halt the virtual machine")
    halt_parser.add_argument('-f', '--force', action="store_true", help="Yank the plug")

    box_parser = subparser.add_parser('box', help="Manage vagabond boxes")
    box_subparser = box_parser.add_subparsers(help="Sub processor help", dest="box_subparser_name")
    
    box_add_parser =  box_subparser.add_parser('add', help="Add a new box")
    box_add_parser.add_argument('-n', '--name', action="store", required=True, help="Name of the box")
    box_add_parser.add_argument('-l', '--loc', action="store", required=True, help="Location of the box")
    #box_add_subparser = box_add_parser.add_subparsers(help="Sub processor help", dest="add_subparser_name")
    #box_add_name_subparser = box_add_subparser.add_parser('name', help="Sub processor help")

    package_parser = subparser.add_parser('package', help="Create a Vagabond package")
    package_parser.add_argument('-o', '--output', action="store", help="Name of the output file")

    # Neither of these are current used       
    up_parser = subparser.add_parser('up', help="Bring the machine up")
    up_parser.add_argument('-f', '--force', action="store_true", help="force create overwriting any previous machines")
    up_parser.add_argument('--hard-force', action="store_true", help="start bu unregistering any vms with the same name")
    
    list_parser = subparser.add_parser('list', help="list options")
    list_parser.add_argument('--ostypes', action="store_true", help="Print a list of valid ostypes and exit")
    return parser.parse_args()


if __name__ == '__main__' and __package__ is None:
    from os import sys, path
    sys.path.append(path.dirname(path.dirname(path.abspath(__file__))))
    from vagabond.vm import VM

    # Do you need the logger in this module?
    from vagabond.logger.logger import get_logger
    L=get_logger()

    # Get the command line arguments
    args = getArgs()

    L = get_logger()
    kwargs = dict(args.__dict__)
    kwargs.update({'TEST':TEST,})
    vm = VM(**kwargs)
    
    
